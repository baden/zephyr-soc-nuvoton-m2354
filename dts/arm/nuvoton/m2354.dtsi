/*
 * Copyright (c) 2023 Nuvoton Technology Corporation.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <arm/armv8-m.dtsi>
// #include "m2354-pinctrl.dtsi"
#include <mem.h>
#include <zephyr/dt-bindings/pinctrl/numaker-m2354-pinctrl.h>
#include <zephyr/dt-bindings/clock/numaker_m2354_clock.h>
#include <zephyr/dt-bindings/reset/numaker_m2354_reset.h>
#include <zephyr/dt-bindings/adc/adc.h>
#include <zephyr/dt-bindings/gpio/gpio.h>
#include <zephyr/dt-bindings/i2c/i2c.h>

/ {
     chosen {
         zephyr,flash-controller = &fmc;
     };

    cpus {
        #address-cells = <1>;
        #size-cells = <0>;

        cpu@0 {
            device_type = "cpu";
            compatible = "arm,cortex-m23";
            reg = <0>;
        };
    };

    // The bank0 address space is from 0x2000_0000 to 0x2000_7FFF(Secure) or 0x3000_0000 to 0x3000_7FFF(Nonsecure).
    // The bank1 address space is from 0x2000_8000 to 0x2002_7FFF (Secure) or 0x3000_8000 to 0x3002_7FFF (Non-secure).
    // The bank2 address space is from 0x2002_8000 to 0x2003_FFFF (Secure) or 0x3002_8000 to 0x3003_FFFF (Non-secure).
    // The address between 0x2004_0000 to 0x2FFF_FFFF(Secure) and 0x3004_0000 to 0x3FFF_FFFF(Non-secure) is illegal memory space and
    // chip will enter hardfault if CPU accesses these illegal memory addresses.

    /*
    sram0: memory@20000000 {
	    compatible = "mmio-sram";
	    reg = <0x20000000 DT_SIZE_K(32)>;
    };

    sram1: memory@20008000 {
	    compatible = "zephyr,memory-region", "mmio-sram";
	    reg = <0x20008000 DT_SIZE_K(128)>;
	    zephyr,memory-region = "SRAM1";
    };

    sram2: memory@20028000 {
	    compatible = "zephyr,memory-region", "mmio-sram";
	    reg = <0x20028000 DT_SIZE_K(96)>;
	    zephyr,memory-region = "SRAM2";
    };
    */

    /* Merge all SRAM regions */
    // The bank0..bank2 address space is from 0x2000_0000 to 0x2003_FFFF(Secure) or 0x3000_0000 to 0x3003_FFFF(Nonsecure).
    
    sram0: memory@20000000 {
	    compatible = "mmio-sram";
	    reg = <0x20000000 DT_SIZE_K(256)>;
	    // reg = <0x20000000 DT_SIZE_K(128)>;
    };
    

    sysclk: system-clock {
        compatible = "fixed-clock";
        //  clock-frequency = <96000000>;
        // clock-frequency = <4000000>;
        clock-frequency = <6000000>;
        #clock-cells = <0>;
    };

    soc {
        scc: system-clock-controller@40000200 {
            compatible = "nuvoton,numaker2-scc";
            reg = <0x40000200 0x100>;
            #clock-cells = <0>;
            /* hxt = "enable"; */
            /* lxt = "enable"; */
            //      clk-pclkdiv = <(NUMAKER_CLK_PCLKDIV_APB0DIV_DIV2 |
            //               NUMAKER_CLK_PCLKDIV_APB1DIV_DIV2)>;
		    // core-clock = <96000000>;
		    // core-clock = <4000000>;
            core-clock = <6000000>;

            pcc: peripheral-clock-controller {
                compatible = "nuvoton,numaker2-pcc";
                #clock-cells = <3>;
            };
        };

        rst: reset-controller@40000000 {
            compatible = "nuvoton,numaker2-rst";
            reg = <0x40000000 0x20>;
            #reset-cells = <1>;
            status = "okay";
        };

        fmc: flash-controller@4000c000 {
            compatible = "nuvoton,numaker2-fmc";
            reg = <0x4000c000 0x110>;
            #address-cells = <1>;
            #size-cells = <1>;

            flash0: flash@0 {
                compatible = "soc-nv-flash";
                reg = <0 DT_SIZE_K(1024)>;
                erase-block-size = <2048>;
                write-block-size = <4>;
            };
        };

        uart0: serial@40070000 {
            compatible = "nuvoton,numaker2-uart";
            reg = <0x40070000 0x1000>;
            interrupts = <36 0>;
            resets = <&rst NUMAKER_UART0_RST>;
            clocks = <&pcc NUMAKER_UART0_MODULE NUMAKER_CLK_CLKSEL2_UART0SEL_HIRC
                   NUMAKER_CLK_CLKDIV0_UART0(1)>;
            status = "disabled";
        };

        uart1: serial@40071000 {
            compatible = "nuvoton,numaker2-uart";
            reg = <0x40071000 0x1000>;
            interrupts = <37 0>;
            resets = <&rst NUMAKER_UART1_RST>;
            clocks = <&pcc NUMAKER_UART1_MODULE NUMAKER_CLK_CLKSEL2_UART1SEL_HIRC
                   NUMAKER_CLK_CLKDIV0_UART1(1)>;
            status = "disabled";
        };

        uart2: serial@40072000 {
            compatible = "nuvoton,numaker2-uart";
            reg = <0x40072000 0x1000>;
            interrupts = <48 0>;
            resets = <&rst NUMAKER_UART2_RST>;
            clocks = <&pcc NUMAKER_UART2_MODULE NUMAKER_CLK_CLKSEL2_UART2SEL_HIRC
                   NUMAKER_CLK_CLKDIV4_UART2(1)>;
            status = "disabled";
        };

        uart3: serial@40073000 {
            compatible = "nuvoton,numaker2-uart";
            reg = <0x40073000 0x1000>;
            interrupts = <49 0>;
            resets = <&rst NUMAKER_UART3_RST>;
            clocks = <&pcc NUMAKER_UART3_MODULE NUMAKER_CLK_CLKSEL2_UART3SEL_HIRC
                   NUMAKER_CLK_CLKDIV4_UART3(1)>;
		//    NUMAKER_CLK_CLKSEL2_UART3SEL_HIRC, NUMAKER_CLK_CLKDIV4_UART3(1)
            status = "disabled";
        };

        uart4: serial@40074000 {
            compatible = "nuvoton,numaker2-uart";
            reg = <0x40074000 0x1000>;
            interrupts = <74 0>;
            resets = <&rst NUMAKER_UART4_RST>;
            clocks = <&pcc NUMAKER_UART4_MODULE NUMAKER_CLK_CLKSEL3_UART4SEL_HIRC
                   NUMAKER_CLK_CLKDIV4_UART4(1)>;
            status = "disabled";
        };

        uart5: serial@40075000 {
            compatible = "nuvoton,numaker2-uart";
            reg = <0x40075000 0x1000>;
            interrupts = <75 0>;
            resets = <&rst NUMAKER_UART5_RST>;
            clocks = <&pcc NUMAKER_UART5_MODULE NUMAKER_CLK_CLKSEL3_UART5SEL_HIRC
                   NUMAKER_CLK_CLKDIV4_UART5(1)>;
            status = "disabled";
        };

        pinctrl: pin-controller@40000080 {
            compatible = "nuvoton,numaker2-pinctrl";
            reg = <0x40000080 0x20
                   0x40000030 0x40>;
            reg-names = "mfos", "mfp";
            status = "okay";
        };

        gpioa: gpio@40004000 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x40004000 0x40>;
            clocks = <&pcc NUMAKER_GPA_MODULE 0 0>;
            status = "disabled";
            interrupts = <16 2>;
        };

        gpiob: gpio@40004040 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x40004040 0x40>;
            clocks = <&pcc NUMAKER_GPB_MODULE 0 0>;
            status = "disabled";
            interrupts = <17 2>;
        };

        gpioc: gpio@40004080 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x40004080 0x40>;
            clocks = <&pcc NUMAKER_GPC_MODULE 0 0>;
            status = "disabled";
            interrupts = <18 2>;
        };

        gpiod: gpio@400040c0 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x400040c0 0x40>;
            clocks = <&pcc NUMAKER_GPD_MODULE 0 0>;
            status = "disabled";
            interrupts = <19 2>;
        };

        gpioe: gpio@40004100 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x40004100 0x40>;
            clocks = <&pcc NUMAKER_GPE_MODULE 0 0>;
            status = "disabled";
            interrupts = <20 2>;
        };

        gpiof: gpio@40004140 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x40004140 0x40>;
            clocks = <&pcc NUMAKER_GPF_MODULE 0 0>;
            status = "disabled";
            interrupts = <21 2>;
        };

        gpiog: gpio@40004180 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x40004180 0x40>;
            clocks = <&pcc NUMAKER_GPG_MODULE 0 0>;
            status = "disabled";
            interrupts = <72 2>;
        };

        gpioh: gpio@400041c0 {
            compatible = "nuvoton,numaker2-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x400041c0 0x40>;
            clocks = <&pcc NUMAKER_GPH_MODULE 0 0>;
            status = "disabled";
            interrupts = <88 2>;
        };

        spi0: spi@40061000 {
            compatible = "nuvoton,numaker2-spi";
            reg = <0x40061000 0x6c>;
            interrupts = <23 0>;
            resets = <&rst NUMAKER_SPI0_RST>;
            clocks = <&pcc NUMAKER_SPI0_MODULE NUMAKER_CLK_CLKSEL2_SPI0SEL_HIRC 0>;
            #address-cells = <1>;
            #size-cells = <0>;
            status = "disabled";
        };

        spi1: spi@40062000 {
            compatible = "nuvoton,numaker2-spi";
            reg = <0x40062000 0x6c>;
            interrupts = <51 0>;
            resets = <&rst NUMAKER_SPI1_RST>;
            clocks = <&pcc NUMAKER_SPI1_MODULE NUMAKER_CLK_CLKSEL2_SPI1SEL_HIRC 0>;
            #address-cells = <1>;
            #size-cells = <0>;
            status = "disabled";
        };

        spi2: spi@40063000 {
            compatible = "nuvoton,numaker2-spi";
            reg = <0x40063000 0x6c>;
            interrupts = <52 0>;
            resets = <&rst NUMAKER_SPI2_RST>;
            clocks = <&pcc NUMAKER_SPI2_MODULE NUMAKER_CLK_CLKSEL2_SPI2SEL_HIRC 0>;
            #address-cells = <1>;
            #size-cells = <0>;
            status = "disabled";
        };

        spi3: spi@40064000 {
            compatible = "nuvoton,numaker2-spi";
            reg = <0x40064000 0x6c>;
            interrupts = <62 0>;
            resets = <&rst NUMAKER_SPI3_RST>;
            clocks = <&pcc NUMAKER_SPI3_MODULE NUMAKER_CLK_CLKSEL2_SPI3SEL_HIRC 0>;
            #address-cells = <1>;
            #size-cells = <0>;
            status = "disabled";
        };

        /*
        i2c0 - 0x4008_0000 – 0x4008_0FFF
        i2c1 - 0x4008_1000 – 0x4008_1FFF
        i2c2 - 0x4008_2000 – 0x4008_2FFF
        */
        i2c0: i2c@40080000 {
            compatible = "nuvoton,numaker2-i2c";
            // reg = <0x40080000 0x6c>;
            // interrupts = <62 0>;
            // resets = <&rst NUMAKER_SPI3_RST>;
            // clocks = <&pcc NUMAKER_SPI3_MODULE NUMAKER_CLK_CLKSEL2_SPI3SEL_HIRC 0>;
            // #address-cells = <1>;
            // #size-cells = <0>;
            // status = "disabled";
			compatible = "nuvoton,numaker2-i2c";
			clock-frequency = <I2C_BITRATE_STANDARD>;
			reg = <0x40080000 0x1000>;
			interrupts = <38 0>;
			resets = <&rst NUMAKER_I2C0_RST>;
			clocks = <&pcc NUMAKER_I2C0_MODULE 0 0>;
			status = "disabled";
			#address-cells = <1>;
			#size-cells = <0>;
        };

		i2c1: i2c@40081000 {
			compatible = "nuvoton,numaker2-i2c";
			clock-frequency = <I2C_BITRATE_STANDARD>;
			reg = <0x40081000 0x1000>;
			interrupts = <39 0>;
			resets = <&rst NUMAKER_I2C1_RST>;
			clocks = <&pcc NUMAKER_I2C1_MODULE 0 0>;
			status = "disabled";
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c2: i2c@40082000 {
			compatible = "nuvoton,numaker2-i2c";
			clock-frequency = <I2C_BITRATE_STANDARD>;
			reg = <0x40082000 0x1000>;
			interrupts = <82 0>;
			resets = <&rst NUMAKER_I2C2_RST>;
			clocks = <&pcc NUMAKER_I2C2_MODULE 0 0>;
			status = "disabled";
			#address-cells = <1>;
			#size-cells = <0>;
		};

        epwm0: epwm@40058000 {
            compatible = "nuvoton,numaker2-pwm";
            reg = <0x40058000 0x37c>;
            interrupts = <25 0>, <26 0>, <27 0>;
            interrupt-names = "pair0", "pair1", "pair2";
            resets = <&rst NUMAKER_EPWM0_RST>;
            prescaler = <19>;
            clocks = <&pcc NUMAKER_EPWM0_MODULE NUMAKER_CLK_CLKSEL2_EPWM0SEL_PCLK0 0>;
            #pwm-cells = <3>;
            status = "disabled";
        };

        epwm1: epwm@40059000 {
            compatible = "nuvoton,numaker2-pwm";
            reg = <0x40059000 0x37c>;
            interrupts = <29 0>, <30 0>, <31 0>;
            interrupt-names = "pair0", "pair1", "pair2";
            resets = <&rst NUMAKER_EPWM1_RST>;
            prescaler = <19>;
            clocks = <&pcc NUMAKER_EPWM1_MODULE NUMAKER_CLK_CLKSEL2_EPWM1SEL_PCLK1 0>;
            #pwm-cells = <3>;
            status = "disabled";
        };

        eadc: eadc@40043000 {
			compatible = "nuvoton,numaker2-adc";
			reg = <0x40043000 0xffc>;
			interrupts = <42 0>;
			resets = <&rst NUMAKER_EADC_RST>;
			// clocks = <&pcc NUMAKER_EADC_MODULE 0 NUMAKER_CLK_CLKDIV0_EADC(12)>; // 96MHz/12 = 8MHz
			clocks = <&pcc NUMAKER_EADC_MODULE 0 NUMAKER_CLK_CLKDIV0_EADC(1)>;  // 4MHz
			// clocks = <&pcc NUMAKER_EADC_MODULE 0 0>;
			channels = <16>;    // M2354SJFAE & M2354KJFAE has 16 channels. M2354LJFAE has 11 channels.
			status = "disabled";
			#io-channel-cells = <1>;
		};

    };
};

&nvic {
    arm,num-irq-priority-bits = <2>;
};

#include "m2354-pinctrl.dtsi"
